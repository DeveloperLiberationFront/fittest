#summary abci, ActionScript bytecode instrumenter.

= abci =

|| [https://code.google.com/p/fittest/source/browse/#svn%2Ftrunk%2Fsub-projects%2Flogtools%2Fabci%2Fv1%253Fstate%253Dclosed src] || [https://fittest.googlecode.com/svn/trunk/sub-projects/logtools/abci/v1/docs/index.html doc] || download ||

Abci is an instrumentation tool to inject low-level logging code into a target application. The application is in !ActionScript bytecode, packaged as a Flash .swf file. Instrumentation is specified with expressions like these:

{{{
[CNis "MyApp", FNhasPrefix  "update"] :>->: LogFunc
}}}

which will insert calls to _logLFunEntry_  and _logLFunExit_ at the entry and exit of every functions in the class _!MyApp_ whose prefix is _update_. These functions will log e.g. the parameters and the instance variable at the corresponding points. Alternatively, you can redefine these functions to make them do custom things.

abci is written using the Utrecht University's Attribute Grammar framework, ontop the functional programming language Haskell.